import os
import asyncio
from telegram import Bot, Update
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# –ö—ñ–Ω—Ü–µ–≤–∞ –¥–∞—Ç–∞: 14 –∫–≤—ñ—Ç–Ω—è 2025, 23:59:59
END_DATE = datetime(2025, 4, 14, 23, 59, 59)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Google Sheets API
SCOPE = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
CREDS_FILE = "credentials.json"  # –§–∞–π–ª –º–∞—î –±—É—Ç–∏ –≤ –∫–æ—Ä–µ–Ω—ñ Replit
SPREADSHEET_URL = "https://docs.google.com/spreadsheets/d/1rVUe1wHurLiq9qNoUHy3FyTI3NXi78IlcpXA3IYlhOw/edit?gid=0#gid=0"

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Google Sheets
creds = ServiceAccountCredentials.from_json_keyfile_name(CREDS_FILE, SCOPE)
client = gspread.authorize(creds)
sheet = client.open_by_url(SPREADSHEET_URL).sheet1

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç–∏ –≤ —Ç–∞–±–ª–∏—Ü—é
def add_expense_to_sheet(amount, sponsor, comment):
    try:
        amount_value = float(amount.strip())  # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Å—É–º—É –≤ —á–∏—Å–ª–æ –±–µ–∑ "–≥—Ä–Ω"
    except ValueError:
        return "–ü–æ–º–∏–ª–∫–∞: —Å—É–º–∞ –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '200')"
    
    current_date = datetime.now().strftime("%d.%m.%Y")
    next_row = len(sheet.get_all_values()) + 1
    # –ó–∞–ø–∏—Å—É—î–º–æ –≤ —Ç–∞–±–ª–∏—Ü—é: A (–î–∞—Ç–∞), B (–°–ø–æ–Ω—Å–æ—Ä), C (–°—É–º–∞ —è–∫ —á–∏—Å–ª–æ), D (–ö–æ–º–µ–Ω—Ç–∞—Ä)
    sheet.update(f"A{next_row}:D{next_row}", [[current_date, sponsor, amount_value, comment]])
    # –£ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –¥–æ–¥–∞—î–º–æ "–≥—Ä–Ω" –¥–ª—è –∑—Ä–æ–∑—É–º—ñ–ª–æ—Å—Ç—ñ
    return f"–î–æ–¥–∞–Ω–æ: {current_date}, {sponsor}, {amount_value} –≥—Ä–Ω, {comment}"

async def handle_updates(bot):
    offset = None
    while True:
        try:
            updates = await bot.get_updates(offset=offset, timeout=30)
            for update in updates:
                if update.message and update.message.text:
                    text = update.message.text.strip()

                    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ "–©–æ —Ç–∞–º –ø–æ —á–∞—Å—É"
                    if text == "–©–æ —Ç–∞–º –ø–æ —á–∞—Å—É":
                        now = datetime.now()
                        delta = END_DATE - now
                        if delta.total_seconds() <= 0:
                            await bot.send_message(
                                chat_id=update.message.chat_id,
                                text="<b>‚è∞ –ß–∞—Å –≤–∏–π—à–æ–≤!</b>\n–†—É–∫–∏ –Ω–∞ —Å—Ç—ñ–ª! üñêÔ∏è",
                                parse_mode="HTML"
                            )
                        else:
                            days, seconds = delta.days, delta.seconds
                            hours = seconds // 3600
                            minutes = (seconds % 3600) // 60
                            seconds = seconds % 60
                            await bot.send_message(
                                chat_id=update.message.chat_id,
                                text=(
                                    "<b>‚è≥ –î–æ –ø—Ä–∏–π–Ω—è—Ç—Ç—è —Ä—ñ—à–µ–Ω–Ω—è –∑–∞–ª–∏—à–∏–ª–æ—Å—å:</b>\n"
                                    f"<code>{days}</code> <i>–¥–Ω—ñ–≤</i> üåû\n"
                                    f"<code>{hours}</code> <i>–≥–æ–¥–∏–Ω</i> ‚è∞\n"
                                    f"<code>{minutes}</code> <i>—Ö–≤–∏–ª–∏–Ω</i> ‚è±Ô∏è\n"
                                    f"<code>{seconds}</code> <i>—Å–µ–∫—É–Ω–¥</i> ‚ö°"
                                ),
                                parse_mode="HTML"
                            )

                    # –û–±—Ä–æ–±–∫–∞ –≤–∏—Ç—Ä–∞—Ç —É —Ñ–æ—Ä–º–∞—Ç—ñ "–í–∏—Ç—Ä–∞—Ç–∞: —Å—É–º–∞, –∫–æ–º–µ–Ω—Ç–∞—Ä"
                    elif text.startswith("–í–∏—Ç—Ä–∞—Ç–∞:"):
                        try:
                            parts = text.replace("–í–∏—Ç—Ä–∞—Ç–∞:", "").strip().split(", ")
                            if len(parts) == 2:  # –õ–∏—à–µ —Å—É–º–∞ —ñ –∫–æ–º–µ–Ω—Ç–∞—Ä
                                amount, comment = parts
                                # –û—Ç—Ä–∏–º—É—î–º–æ —é–∑–µ—Ä–Ω–µ–π–º –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞
                                sponsor = update.message.from_user.username
                                if not sponsor:  # –Ø–∫—â–æ —é–∑–µ—Ä–Ω–µ–π–º—É –Ω–µ–º–∞—î
                                    sponsor = update.message.from_user.first_name
                                result = add_expense_to_sheet(amount, f"@{sponsor}" if sponsor.startswith("@") else sponsor, comment)
                                await bot.send_message(
                                    chat_id=update.message.chat_id,
                                    text=result
                                )
                            else:
                                await bot.send_message(
                                    chat_id=update.message.chat_id,
                                    text="–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π: –í–∏—Ç—Ä–∞—Ç–∞: —Å—É–º–∞, –∫–æ–º–µ–Ω—Ç–∞—Ä (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '200, –∫–∞–≤–∞')"
                                )
                        except Exception as e:
                            await bot.send_message(
                                chat_id=update.message.chat_id,
                                text=f"–ü–æ–º–∏–ª–∫–∞: {e}"
                            )

                offset = update.update_id + 1
        except Exception as e:
            print(f"Error: {e}")
            await asyncio.sleep(5)

async def main():
    bot = Bot(token=os.getenv("BOT_TOKEN"))
    print("Bot started!")
    await handle_updates(bot)

if __name__ == "__main__":
    asyncio.run(main())
